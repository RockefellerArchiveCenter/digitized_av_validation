AWSTemplateFormatVersion: '2010-09-09'
Description: >
  digitized-av-validation

  Handles validation of incoming digitized audiovisual assets.

Parameters:
  ContainerImageName:
    Type: String
    Description: Name of container used in this task.
    Default: digitized_av_validation
  ApplicationEnvironment:
    Type: String
    Description: Environment in which application should be deployed.
    AllowedValues:
      - dev
      - prod
    Default: dev
  ApplicationName:
    Type: String
    Description: Name of the application to be deployed.
    Default: digitized-av-validation
  StoragePath:
    Type: String
    Description: Temporary storage path into which files are moved during processing.
    Default: '/tmp'
  DestinationPath:
    Type: String
    Description: Destination storage path to which valid files are moved after processing.
    Default: '/qc'

Resources:
  DigitizedAvValidationRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: !Sub 'Allows management of S3 assets and creation of SNS messages.'
      Policies:
        - PolicyName: DigitizedAvValidationS3BucketPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 
                  - 's3:ListBucket'
                Resource: 
                  - !GetAtt AudioUploadBucket.Arn
                  - !GetAtt VideoUploadBucket.Arn
        - PolicyName: DigitizedAvValidationS3ObjectPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:DeleteObject'
                Resource: 
                  - !Sub '${AudioUploadBucket.Arn}/*'
                  - !Sub '${VideoUploadBucket.Arn}/*'
        - PolicyName: DigitizedAvValidationSNSPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'sns:Publish'
                Resource: !ImportValue DigitizedAV-SNSTopicArn

  ValidationECSTask:
    Type: AWS::ECS::TaskDefinition
    Properties: 
      ContainerDefinitions: 
        - Name: !Ref ContainerImageName
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ContainerImageName}:latest"
          Essential: true
          Environment:
            - Name: AWS_ROLE_ARN
              Value: !GetAtt DigitizedAvValidationRole.Arn
            - Name: ENV
              Value: !Ref ApplicationEnvironment
            - Name: APP_CONFIG_PATH
              Value: !Ref ApplicationName
            - Name: TMP_DIR
              Value: !Ref StoragePath
            - Name: DESTINATION_DIR
              Value: !Ref DestinationPath
            - Name: AWS_REGION_NAME
              Value: !Ref AWS::Region
            - Name: AWS_SNS_TOPIC
              Value: !ImportValue DigitizedAV-SNSTopicArn
          MountPoints:
            - SourceVolume: efs
              ContainerPath: !Ref StoragePath
              ReadOnly: false
          LogConfiguration:
            LogDriver: awslogs
            Options:
              "awslogs-create-group": "true"
              "awslogs-group": !Sub "/ecs/${ContainerImageName}"
              "awslogs-region": "us-east-1"
              "awslogs-stream-prefix": "ecs"
      ExecutionRoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/ecsTaskExecutionRole
      Family: !Ref ContainerImageName
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: X86_64
        OperatingSystemFamily: LINUX
      Volumes: 
        - Name: efs
          EFSVolumeConfiguration:
            FilesystemId: !ImportValue DigitizedAV-EFS
            RootDirectory: /
            TransitEncryption: ENABLED
            AuthorizationConfig:
              AccessPointId: !ImportValue DigitizedAV-EFS-ValidatorAccessPoint
              IAM: DISABLED
  
  AudioUploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: String
      BucketName: rac-av-upload-audio
      NotificationConfiguration:
        LambdaConfigurations:
          - Function: !ImportValue DigitizedAV-TriggerArn
            Event: 's3:ObjectCreated:*'
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
 
  VideoUploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: String
      BucketName: rac-av-upload-video
      NotificationConfiguration:
        LambdaConfigurations:
          - Function: !ImportValue DigitizedAV-TriggerArn
            Event: 's3:ObjectCreated:*'
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

Outputs:
  ValidationECSTask:
    Description: "Validation ECS Task Definition ARN"
    Value: !GetAtt ValidationECSTask.Arn
  AudioUploadBucket:
    Description: "Audio upload S3 bucket ARN"
    Value: !GetAtt AudioUploadBucket.Arn
  VideoUploadBucket:
    Description: "Video upload S3 bucket ARN"
    Value: !GetAtt VideoUploadBucket.Arn  
